# Clear memory
rm(list=ls())
## Libraries required
# To connect to GlobalArchive
library(devtools)
# install_github("UWAMEGFisheries/GlobalArchive") # Run this once to install the GlobalArchive package
library(GlobalArchive)
# To tidy data
library(tidyr)
library(plyr)
library(dplyr)
library(stringr)
library(readr)
library(ggplot2)
# Study name
study <- "2021-05_Abrolhos_stereo-BRUVs"  # Enter your study name here for saving tidy data later
# Set your working directory
working.dir <- getwd() # Run this line for github projects, or type your working directory manually
# Save these directory names to use later
# We recommend replicating our folder structure, however change directories here if you decide a different folder structure is more suitable for your project
# The recommended folder structure uses a data directory within the main directory, which contains multiple sub-folders for raw data, the original annotation images, errors to check and the final tidy data
data.dir  <- paste(working.dir,"data", sep="/")
raw.dir   <- paste(data.dir,"raw", sep="/")
tidy.dir  <- paste(data.dir,"tidy", sep="/")
error.dir <- paste(data.dir,"errors to check", sep="/")
image.dir <- paste(data.dir, "images", sep = "/")
### 1. Import data and run BASIC error reports ----
# Read in the metadata
setwd(raw.dir)
dir()
# Read in metadata
metadata  <- read_csv("2021-05_Abrolhos_stereo-BRUVs_Metadata.csv") %>% # Read in the file
ga.clean.names() %>% # Tidy the column names using GlobalArchive function
dplyr::select(sample, latitude, longitude, date, site, location, successful.count) %>% # Select only these columns to keep
# mutate(sample=as.character(sample)) %>% # Turn this line on if you have numerical sample names
glimpse() # Preview the data
# Read in metadata
metadata  <- read_csv(paste0(study,"_Metadata.csv")) %>% # Read in the file
ga.clean.names() %>% # Tidy the column names using GlobalArchive function
dplyr::select(sample, latitude, longitude, date, site, location, successful.count) %>% # Select only these columns to keep
# mutate(sample=as.character(sample)) %>% # Turn this line on if you have numerical sample names
glimpse() # Preview the data
# Read in metadata
metadata  <- read_csv(paste0(study, "_Metadata.csv")) %>% # Read in the file
ga.clean.names() %>% # Tidy the column names using GlobalArchive function
dplyr::select(sample, latitude, longitude, date, site, location, successful.count) %>% # Select only these columns to keep
# mutate(sample=as.character(sample)) %>% # Turn this line on if you have numerical sample names
glimpse() # Preview the data
# Read in the raw habitat data
dir()
# read in the benthic composition points annotations
points <- read.delim(paste0(study, "_Dot Point Measurements.txt"),header=T,skip=4,stringsAsFactors=FALSE) %>% # Read in the file
ga.clean.names() %>% # Tidy the column names using GlobalArchive function
mutate(sample=str_replace_all(.$filename,c(".png"="",".jpg"="",".JPG"=""))) %>% # Removes file extensions from sample names
# mutate(sample=as.character(sample)) %>% # Turn on if you have numerical sample names
select(sample,image.row,image.col,broad,morphology,type,fieldofview) %>% # select only these columns to keep
glimpse() # preview
# Clear memory
rm(list=ls())
# Study name
study <- "2021-05_Abrolhos_stereo-BRUVs"  # Enter your study name here for saving tidy data later
# Set your working directory
working.dir <- getwd() # Run this line for github projects, or type your working directory manually
setwd("H:/GitHub/forward-facing-benthic-composition-annotation")
# Set your working directory
working.dir <- getwd() # Run this line for github projects, or type your working directory manually
# Save these directory names to use later
# We recommend replicating our folder structure, however change directories here if you decide a different folder structure is more suitable for your project
# The recommended folder structure uses a data directory within the main directory, which contains multiple sub-folders for raw data, the original annotation images, errors to check and the final tidy data
data.dir  <- paste(working.dir,"data", sep="/")
raw.dir   <- paste(data.dir,"raw", sep="/")
tidy.dir  <- paste(data.dir,"tidy", sep="/")
error.dir <- paste(data.dir,"errors to check", sep="/")
image.dir <- paste(data.dir, "images", sep = "/")
### 1. Import data and run BASIC error reports ----
# Read in the metadata
setwd(raw.dir)
dir()
# Read in metadata
metadata  <- read_csv(paste0(study, "_Metadata.csv")) %>% # Read in the file
ga.clean.names() %>% # Tidy the column names using GlobalArchive function
dplyr::select(sample, latitude, longitude, date, site, location, successful.count) %>% # Select only these columns to keep
# mutate(sample=as.character(sample)) %>% # Turn this line on if you have numerical sample names
glimpse() # Preview the data
# Read in the raw habitat data
dir()
# read in the benthic composition points annotations
points <- read.delim(paste0(study, "_Dot Point Measurements.txt"),header=T,skip=4,stringsAsFactors=FALSE) %>% # Read in the file
ga.clean.names() %>% # Tidy the column names using GlobalArchive function
mutate(sample=str_replace_all(.$filename,c(".png"="",".jpg"="",".JPG"=""))) %>% # Removes file extensions from sample names
# mutate(sample=as.character(sample)) %>% # Turn on if you have numerical sample names
select(sample,image.row,image.col,broad,morphology,type,fieldofview) %>% # s elect only these columns to keep
glimpse() # preview
# Check to see if you have samples with points extra or missing points annotated
num.annotations.habitat <- points%>%
group_by(sample)%>%
summarise(points.annotated=n()) # all have 20 points annotated
# read in the relief gridded annotations
relief <- read.delim("2021-05_Abrolhos_stereo-BRUVs_Forwards_Relief_Dot Point Measurements.txt",header=T,skip=4,stringsAsFactors=FALSE) %>% # Read in the file
ga.clean.names() %>% # Tidy the column names using GlobalArchive function
mutate(sample=str_replace_all(.$filename,c(".png"="",".jpg"="",".JPG"=""))) %>% # Removes file extensions from sample names
# mutate(sample=as.character(sample)) %>% # Turn on if you have numerical sample names
select(sample,image.row,image.col,broad,morphology,type,fieldofview,relief) %>% # Select only these columns to keep
glimpse() # Preview
View(points)
paste0(study, "_Dot Point Measurements.txt")
paste0(study, "_Relief_Dot Point Measurements.txt")
# Check to see if you have samples with points extra or missing points annotated
num.annotations.habitat <- points%>%
group_by(sample)%>%
summarise(points.annotated=n()) # all have 20 points annotated
# read in the relief gridded annotations
relief <- read.delim(paste0(study, "_Relief_Dot Point Measurements.txt"),header=T,skip=4,stringsAsFactors=FALSE) %>% # Read in the file
ga.clean.names() %>% # Tidy the column names using GlobalArchive function
mutate(sample=str_replace_all(.$filename,c(".png"="",".jpg"="",".JPG"=""))) %>% # Removes file extensions from sample names
# mutate(sample=as.character(sample)) %>% # Turn on if you have numerical sample names
select(sample,image.row,image.col,broad,morphology,type,fieldofview,relief) %>% # Select only these columns to keep
glimpse() # Preview
# Check to see if you have samples with points extra or missing points annotated
num.annotations.relief  <- relief %>%
group_by(sample) %>%
summarise(relief.annotated=n()) # All have 20 points annotated
